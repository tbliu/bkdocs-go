/*
Alpaca Broker API

Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// TransferResourceAllOf struct for TransferResourceAllOf
type TransferResourceAllOf struct {
	Type string `json:"type"`
	Status string `json:"status"`
	AccountId string `json:"account_id"`
	Reason NullableString `json:"reason,omitempty"`
	ExpiresAt time.Time `json:"expires_at"`
}

// NewTransferResourceAllOf instantiates a new TransferResourceAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferResourceAllOf(type_ string, status string, accountId string, expiresAt time.Time) *TransferResourceAllOf {
	this := TransferResourceAllOf{}
	this.Type = type_
	this.Status = status
	this.AccountId = accountId
	this.ExpiresAt = expiresAt
	return &this
}

// NewTransferResourceAllOfWithDefaults instantiates a new TransferResourceAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferResourceAllOfWithDefaults() *TransferResourceAllOf {
	this := TransferResourceAllOf{}
	return &this
}

// GetType returns the Type field value
func (o *TransferResourceAllOf) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TransferResourceAllOf) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TransferResourceAllOf) SetType(v string) {
	o.Type = v
}

// GetStatus returns the Status field value
func (o *TransferResourceAllOf) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *TransferResourceAllOf) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *TransferResourceAllOf) SetStatus(v string) {
	o.Status = v
}

// GetAccountId returns the AccountId field value
func (o *TransferResourceAllOf) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *TransferResourceAllOf) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *TransferResourceAllOf) SetAccountId(v string) {
	o.AccountId = v
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferResourceAllOf) GetReason() string {
	if o == nil || o.Reason.Get() == nil {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferResourceAllOf) GetReasonOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *TransferResourceAllOf) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *TransferResourceAllOf) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *TransferResourceAllOf) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *TransferResourceAllOf) UnsetReason() {
	o.Reason.Unset()
}

// GetExpiresAt returns the ExpiresAt field value
func (o *TransferResourceAllOf) GetExpiresAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *TransferResourceAllOf) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *TransferResourceAllOf) SetExpiresAt(v time.Time) {
	o.ExpiresAt = v
}

func (o TransferResourceAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	if true {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	return json.Marshal(toSerialize)
}

type NullableTransferResourceAllOf struct {
	value *TransferResourceAllOf
	isSet bool
}

func (v NullableTransferResourceAllOf) Get() *TransferResourceAllOf {
	return v.value
}

func (v *NullableTransferResourceAllOf) Set(val *TransferResourceAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferResourceAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferResourceAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferResourceAllOf(val *TransferResourceAllOf) *NullableTransferResourceAllOf {
	return &NullableTransferResourceAllOf{value: val, isSet: true}
}

func (v NullableTransferResourceAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferResourceAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


