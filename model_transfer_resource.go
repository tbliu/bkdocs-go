/*
Alpaca Broker API

Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// TransferResource struct for TransferResource
type TransferResource struct {
	Id string `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	Type string `json:"type"`
	Status string `json:"status"`
	AccountId string `json:"account_id"`
	Reason NullableString `json:"reason,omitempty"`
	ExpiresAt time.Time `json:"expires_at"`
	Amount float64 `json:"amount"`
	Direction string `json:"direction"`
	RelationshipId string `json:"relationship_id"`
	AdditionalInformation *string `json:"additional_information,omitempty"`
	BankId string `json:"bank_id"`
}

// NewTransferResource instantiates a new TransferResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferResource(id string, createdAt time.Time, updatedAt time.Time, type_ string, status string, accountId string, expiresAt time.Time, amount float64, direction string, relationshipId string, bankId string) *TransferResource {
	this := TransferResource{}
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Type = type_
	this.Status = status
	this.AccountId = accountId
	this.ExpiresAt = expiresAt
	this.Amount = amount
	this.Direction = direction
	this.RelationshipId = relationshipId
	this.BankId = bankId
	return &this
}

// NewTransferResourceWithDefaults instantiates a new TransferResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferResourceWithDefaults() *TransferResource {
	this := TransferResource{}
	return &this
}

// GetId returns the Id field value
func (o *TransferResource) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TransferResource) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TransferResource) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TransferResource) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TransferResource) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TransferResource) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *TransferResource) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *TransferResource) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *TransferResource) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetType returns the Type field value
func (o *TransferResource) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TransferResource) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TransferResource) SetType(v string) {
	o.Type = v
}

// GetStatus returns the Status field value
func (o *TransferResource) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *TransferResource) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *TransferResource) SetStatus(v string) {
	o.Status = v
}

// GetAccountId returns the AccountId field value
func (o *TransferResource) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *TransferResource) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *TransferResource) SetAccountId(v string) {
	o.AccountId = v
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferResource) GetReason() string {
	if o == nil || o.Reason.Get() == nil {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferResource) GetReasonOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *TransferResource) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *TransferResource) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *TransferResource) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *TransferResource) UnsetReason() {
	o.Reason.Unset()
}

// GetExpiresAt returns the ExpiresAt field value
func (o *TransferResource) GetExpiresAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *TransferResource) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *TransferResource) SetExpiresAt(v time.Time) {
	o.ExpiresAt = v
}

// GetAmount returns the Amount field value
func (o *TransferResource) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TransferResource) GetAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TransferResource) SetAmount(v float64) {
	o.Amount = v
}

// GetDirection returns the Direction field value
func (o *TransferResource) GetDirection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *TransferResource) GetDirectionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *TransferResource) SetDirection(v string) {
	o.Direction = v
}

// GetRelationshipId returns the RelationshipId field value
func (o *TransferResource) GetRelationshipId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RelationshipId
}

// GetRelationshipIdOk returns a tuple with the RelationshipId field value
// and a boolean to check if the value has been set.
func (o *TransferResource) GetRelationshipIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RelationshipId, true
}

// SetRelationshipId sets field value
func (o *TransferResource) SetRelationshipId(v string) {
	o.RelationshipId = v
}

// GetAdditionalInformation returns the AdditionalInformation field value if set, zero value otherwise.
func (o *TransferResource) GetAdditionalInformation() string {
	if o == nil || o.AdditionalInformation == nil {
		var ret string
		return ret
	}
	return *o.AdditionalInformation
}

// GetAdditionalInformationOk returns a tuple with the AdditionalInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferResource) GetAdditionalInformationOk() (*string, bool) {
	if o == nil || o.AdditionalInformation == nil {
		return nil, false
	}
	return o.AdditionalInformation, true
}

// HasAdditionalInformation returns a boolean if a field has been set.
func (o *TransferResource) HasAdditionalInformation() bool {
	if o != nil && o.AdditionalInformation != nil {
		return true
	}

	return false
}

// SetAdditionalInformation gets a reference to the given string and assigns it to the AdditionalInformation field.
func (o *TransferResource) SetAdditionalInformation(v string) {
	o.AdditionalInformation = &v
}

// GetBankId returns the BankId field value
func (o *TransferResource) GetBankId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankId
}

// GetBankIdOk returns a tuple with the BankId field value
// and a boolean to check if the value has been set.
func (o *TransferResource) GetBankIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BankId, true
}

// SetBankId sets field value
func (o *TransferResource) SetBankId(v string) {
	o.BankId = v
}

func (o TransferResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	if true {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["direction"] = o.Direction
	}
	if true {
		toSerialize["relationship_id"] = o.RelationshipId
	}
	if o.AdditionalInformation != nil {
		toSerialize["additional_information"] = o.AdditionalInformation
	}
	if true {
		toSerialize["bank_id"] = o.BankId
	}
	return json.Marshal(toSerialize)
}

type NullableTransferResource struct {
	value *TransferResource
	isSet bool
}

func (v NullableTransferResource) Get() *TransferResource {
	return v.value
}

func (v *NullableTransferResource) Set(val *TransferResource) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferResource) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferResource(val *TransferResource) *NullableTransferResource {
	return &NullableTransferResource{value: val, isSet: true}
}

func (v NullableTransferResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


