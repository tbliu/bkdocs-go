/*
Alpaca Broker API

Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UntypedWireTransferDataAllOf struct for UntypedWireTransferDataAllOf
type UntypedWireTransferDataAllOf struct {
	AdditionalInformation *string `json:"additional_information,omitempty"`
	BankId string `json:"bank_id"`
}

// NewUntypedWireTransferDataAllOf instantiates a new UntypedWireTransferDataAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUntypedWireTransferDataAllOf(bankId string) *UntypedWireTransferDataAllOf {
	this := UntypedWireTransferDataAllOf{}
	this.BankId = bankId
	return &this
}

// NewUntypedWireTransferDataAllOfWithDefaults instantiates a new UntypedWireTransferDataAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUntypedWireTransferDataAllOfWithDefaults() *UntypedWireTransferDataAllOf {
	this := UntypedWireTransferDataAllOf{}
	return &this
}

// GetAdditionalInformation returns the AdditionalInformation field value if set, zero value otherwise.
func (o *UntypedWireTransferDataAllOf) GetAdditionalInformation() string {
	if o == nil || o.AdditionalInformation == nil {
		var ret string
		return ret
	}
	return *o.AdditionalInformation
}

// GetAdditionalInformationOk returns a tuple with the AdditionalInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UntypedWireTransferDataAllOf) GetAdditionalInformationOk() (*string, bool) {
	if o == nil || o.AdditionalInformation == nil {
		return nil, false
	}
	return o.AdditionalInformation, true
}

// HasAdditionalInformation returns a boolean if a field has been set.
func (o *UntypedWireTransferDataAllOf) HasAdditionalInformation() bool {
	if o != nil && o.AdditionalInformation != nil {
		return true
	}

	return false
}

// SetAdditionalInformation gets a reference to the given string and assigns it to the AdditionalInformation field.
func (o *UntypedWireTransferDataAllOf) SetAdditionalInformation(v string) {
	o.AdditionalInformation = &v
}

// GetBankId returns the BankId field value
func (o *UntypedWireTransferDataAllOf) GetBankId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankId
}

// GetBankIdOk returns a tuple with the BankId field value
// and a boolean to check if the value has been set.
func (o *UntypedWireTransferDataAllOf) GetBankIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BankId, true
}

// SetBankId sets field value
func (o *UntypedWireTransferDataAllOf) SetBankId(v string) {
	o.BankId = v
}

func (o UntypedWireTransferDataAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalInformation != nil {
		toSerialize["additional_information"] = o.AdditionalInformation
	}
	if true {
		toSerialize["bank_id"] = o.BankId
	}
	return json.Marshal(toSerialize)
}

type NullableUntypedWireTransferDataAllOf struct {
	value *UntypedWireTransferDataAllOf
	isSet bool
}

func (v NullableUntypedWireTransferDataAllOf) Get() *UntypedWireTransferDataAllOf {
	return v.value
}

func (v *NullableUntypedWireTransferDataAllOf) Set(val *UntypedWireTransferDataAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUntypedWireTransferDataAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUntypedWireTransferDataAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUntypedWireTransferDataAllOf(val *UntypedWireTransferDataAllOf) *NullableUntypedWireTransferDataAllOf {
	return &NullableUntypedWireTransferDataAllOf{value: val, isSet: true}
}

func (v NullableUntypedWireTransferDataAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUntypedWireTransferDataAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


