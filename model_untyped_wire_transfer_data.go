/*
Alpaca Broker API

Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UntypedWireTransferData struct for UntypedWireTransferData
type UntypedWireTransferData struct {
	Amount float64 `json:"amount"`
	Direction string `json:"direction"`
	AdditionalInformation *string `json:"additional_information,omitempty"`
	BankId string `json:"bank_id"`
}

// NewUntypedWireTransferData instantiates a new UntypedWireTransferData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUntypedWireTransferData(amount float64, direction string, bankId string) *UntypedWireTransferData {
	this := UntypedWireTransferData{}
	this.Amount = amount
	this.Direction = direction
	this.BankId = bankId
	return &this
}

// NewUntypedWireTransferDataWithDefaults instantiates a new UntypedWireTransferData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUntypedWireTransferDataWithDefaults() *UntypedWireTransferData {
	this := UntypedWireTransferData{}
	return &this
}

// GetAmount returns the Amount field value
func (o *UntypedWireTransferData) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *UntypedWireTransferData) GetAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *UntypedWireTransferData) SetAmount(v float64) {
	o.Amount = v
}

// GetDirection returns the Direction field value
func (o *UntypedWireTransferData) GetDirection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *UntypedWireTransferData) GetDirectionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *UntypedWireTransferData) SetDirection(v string) {
	o.Direction = v
}

// GetAdditionalInformation returns the AdditionalInformation field value if set, zero value otherwise.
func (o *UntypedWireTransferData) GetAdditionalInformation() string {
	if o == nil || o.AdditionalInformation == nil {
		var ret string
		return ret
	}
	return *o.AdditionalInformation
}

// GetAdditionalInformationOk returns a tuple with the AdditionalInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UntypedWireTransferData) GetAdditionalInformationOk() (*string, bool) {
	if o == nil || o.AdditionalInformation == nil {
		return nil, false
	}
	return o.AdditionalInformation, true
}

// HasAdditionalInformation returns a boolean if a field has been set.
func (o *UntypedWireTransferData) HasAdditionalInformation() bool {
	if o != nil && o.AdditionalInformation != nil {
		return true
	}

	return false
}

// SetAdditionalInformation gets a reference to the given string and assigns it to the AdditionalInformation field.
func (o *UntypedWireTransferData) SetAdditionalInformation(v string) {
	o.AdditionalInformation = &v
}

// GetBankId returns the BankId field value
func (o *UntypedWireTransferData) GetBankId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankId
}

// GetBankIdOk returns a tuple with the BankId field value
// and a boolean to check if the value has been set.
func (o *UntypedWireTransferData) GetBankIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BankId, true
}

// SetBankId sets field value
func (o *UntypedWireTransferData) SetBankId(v string) {
	o.BankId = v
}

func (o UntypedWireTransferData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["direction"] = o.Direction
	}
	if o.AdditionalInformation != nil {
		toSerialize["additional_information"] = o.AdditionalInformation
	}
	if true {
		toSerialize["bank_id"] = o.BankId
	}
	return json.Marshal(toSerialize)
}

type NullableUntypedWireTransferData struct {
	value *UntypedWireTransferData
	isSet bool
}

func (v NullableUntypedWireTransferData) Get() *UntypedWireTransferData {
	return v.value
}

func (v *NullableUntypedWireTransferData) Set(val *UntypedWireTransferData) {
	v.value = val
	v.isSet = true
}

func (v NullableUntypedWireTransferData) IsSet() bool {
	return v.isSet
}

func (v *NullableUntypedWireTransferData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUntypedWireTransferData(val *UntypedWireTransferData) *NullableUntypedWireTransferData {
	return &NullableUntypedWireTransferData{value: val, isSet: true}
}

func (v NullableUntypedWireTransferData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUntypedWireTransferData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


