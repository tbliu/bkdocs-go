/*
Alpaca Broker API

Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccountStatusEvent struct for AccountStatusEvent
type AccountStatusEvent struct {
	AccountId string `json:"account_id"`
	AccountNumber string `json:"account_number"`
	StatusFrom string `json:"status_from"`
	StatusTo string `json:"status_to"`
	Reason string `json:"reason"`
	At string `json:"at"`
	KycResult *KYCResult `json:"kyc_result,omitempty"`
}

// NewAccountStatusEvent instantiates a new AccountStatusEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountStatusEvent(accountId string, accountNumber string, statusFrom string, statusTo string, reason string, at string) *AccountStatusEvent {
	this := AccountStatusEvent{}
	this.AccountId = accountId
	this.AccountNumber = accountNumber
	this.StatusFrom = statusFrom
	this.StatusTo = statusTo
	this.Reason = reason
	this.At = at
	return &this
}

// NewAccountStatusEventWithDefaults instantiates a new AccountStatusEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountStatusEventWithDefaults() *AccountStatusEvent {
	this := AccountStatusEvent{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *AccountStatusEvent) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *AccountStatusEvent) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *AccountStatusEvent) SetAccountId(v string) {
	o.AccountId = v
}

// GetAccountNumber returns the AccountNumber field value
func (o *AccountStatusEvent) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *AccountStatusEvent) GetAccountNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *AccountStatusEvent) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetStatusFrom returns the StatusFrom field value
func (o *AccountStatusEvent) GetStatusFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusFrom
}

// GetStatusFromOk returns a tuple with the StatusFrom field value
// and a boolean to check if the value has been set.
func (o *AccountStatusEvent) GetStatusFromOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StatusFrom, true
}

// SetStatusFrom sets field value
func (o *AccountStatusEvent) SetStatusFrom(v string) {
	o.StatusFrom = v
}

// GetStatusTo returns the StatusTo field value
func (o *AccountStatusEvent) GetStatusTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusTo
}

// GetStatusToOk returns a tuple with the StatusTo field value
// and a boolean to check if the value has been set.
func (o *AccountStatusEvent) GetStatusToOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StatusTo, true
}

// SetStatusTo sets field value
func (o *AccountStatusEvent) SetStatusTo(v string) {
	o.StatusTo = v
}

// GetReason returns the Reason field value
func (o *AccountStatusEvent) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *AccountStatusEvent) GetReasonOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *AccountStatusEvent) SetReason(v string) {
	o.Reason = v
}

// GetAt returns the At field value
func (o *AccountStatusEvent) GetAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.At
}

// GetAtOk returns a tuple with the At field value
// and a boolean to check if the value has been set.
func (o *AccountStatusEvent) GetAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.At, true
}

// SetAt sets field value
func (o *AccountStatusEvent) SetAt(v string) {
	o.At = v
}

// GetKycResult returns the KycResult field value if set, zero value otherwise.
func (o *AccountStatusEvent) GetKycResult() KYCResult {
	if o == nil || o.KycResult == nil {
		var ret KYCResult
		return ret
	}
	return *o.KycResult
}

// GetKycResultOk returns a tuple with the KycResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountStatusEvent) GetKycResultOk() (*KYCResult, bool) {
	if o == nil || o.KycResult == nil {
		return nil, false
	}
	return o.KycResult, true
}

// HasKycResult returns a boolean if a field has been set.
func (o *AccountStatusEvent) HasKycResult() bool {
	if o != nil && o.KycResult != nil {
		return true
	}

	return false
}

// SetKycResult gets a reference to the given KYCResult and assigns it to the KycResult field.
func (o *AccountStatusEvent) SetKycResult(v KYCResult) {
	o.KycResult = &v
}

func (o AccountStatusEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if true {
		toSerialize["account_number"] = o.AccountNumber
	}
	if true {
		toSerialize["status_from"] = o.StatusFrom
	}
	if true {
		toSerialize["status_to"] = o.StatusTo
	}
	if true {
		toSerialize["reason"] = o.Reason
	}
	if true {
		toSerialize["at"] = o.At
	}
	if o.KycResult != nil {
		toSerialize["kyc_result"] = o.KycResult
	}
	return json.Marshal(toSerialize)
}

type NullableAccountStatusEvent struct {
	value *AccountStatusEvent
	isSet bool
}

func (v NullableAccountStatusEvent) Get() *AccountStatusEvent {
	return v.value
}

func (v *NullableAccountStatusEvent) Set(val *AccountStatusEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountStatusEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountStatusEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountStatusEvent(val *AccountStatusEvent) *NullableAccountStatusEvent {
	return &NullableAccountStatusEvent{value: val, isSet: true}
}

func (v NullableAccountStatusEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountStatusEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


