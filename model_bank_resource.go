/*
Alpaca Broker API

Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// BankResource struct for BankResource
type BankResource struct {
	Id string `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	Name string `json:"name"`
	BankCode string `json:"bank_code"`
	BankCodeType string `json:"bank_code_type"`
	Country *string `json:"country,omitempty"`
	StateProvince *string `json:"state_province,omitempty"`
	PostalCode *string `json:"postal_code,omitempty"`
	City *string `json:"city,omitempty"`
	StreetAddress *string `json:"street_address,omitempty"`
	AccountNumber string `json:"account_number"`
	AccountId string `json:"account_id"`
	Status string `json:"status"`
}

// NewBankResource instantiates a new BankResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankResource(id string, createdAt time.Time, updatedAt time.Time, name string, bankCode string, bankCodeType string, accountNumber string, accountId string, status string) *BankResource {
	this := BankResource{}
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Name = name
	this.BankCode = bankCode
	this.BankCodeType = bankCodeType
	this.AccountNumber = accountNumber
	this.AccountId = accountId
	this.Status = status
	return &this
}

// NewBankResourceWithDefaults instantiates a new BankResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankResourceWithDefaults() *BankResource {
	this := BankResource{}
	return &this
}

// GetId returns the Id field value
func (o *BankResource) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BankResource) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BankResource) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BankResource) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BankResource) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BankResource) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BankResource) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BankResource) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BankResource) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetName returns the Name field value
func (o *BankResource) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BankResource) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BankResource) SetName(v string) {
	o.Name = v
}

// GetBankCode returns the BankCode field value
func (o *BankResource) GetBankCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value
// and a boolean to check if the value has been set.
func (o *BankResource) GetBankCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BankCode, true
}

// SetBankCode sets field value
func (o *BankResource) SetBankCode(v string) {
	o.BankCode = v
}

// GetBankCodeType returns the BankCodeType field value
func (o *BankResource) GetBankCodeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankCodeType
}

// GetBankCodeTypeOk returns a tuple with the BankCodeType field value
// and a boolean to check if the value has been set.
func (o *BankResource) GetBankCodeTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BankCodeType, true
}

// SetBankCodeType sets field value
func (o *BankResource) SetBankCodeType(v string) {
	o.BankCodeType = v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *BankResource) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankResource) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *BankResource) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *BankResource) SetCountry(v string) {
	o.Country = &v
}

// GetStateProvince returns the StateProvince field value if set, zero value otherwise.
func (o *BankResource) GetStateProvince() string {
	if o == nil || o.StateProvince == nil {
		var ret string
		return ret
	}
	return *o.StateProvince
}

// GetStateProvinceOk returns a tuple with the StateProvince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankResource) GetStateProvinceOk() (*string, bool) {
	if o == nil || o.StateProvince == nil {
		return nil, false
	}
	return o.StateProvince, true
}

// HasStateProvince returns a boolean if a field has been set.
func (o *BankResource) HasStateProvince() bool {
	if o != nil && o.StateProvince != nil {
		return true
	}

	return false
}

// SetStateProvince gets a reference to the given string and assigns it to the StateProvince field.
func (o *BankResource) SetStateProvince(v string) {
	o.StateProvince = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *BankResource) GetPostalCode() string {
	if o == nil || o.PostalCode == nil {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankResource) GetPostalCodeOk() (*string, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *BankResource) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *BankResource) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *BankResource) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankResource) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *BankResource) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *BankResource) SetCity(v string) {
	o.City = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *BankResource) GetStreetAddress() string {
	if o == nil || o.StreetAddress == nil {
		var ret string
		return ret
	}
	return *o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankResource) GetStreetAddressOk() (*string, bool) {
	if o == nil || o.StreetAddress == nil {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *BankResource) HasStreetAddress() bool {
	if o != nil && o.StreetAddress != nil {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given string and assigns it to the StreetAddress field.
func (o *BankResource) SetStreetAddress(v string) {
	o.StreetAddress = &v
}

// GetAccountNumber returns the AccountNumber field value
func (o *BankResource) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *BankResource) GetAccountNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *BankResource) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetAccountId returns the AccountId field value
func (o *BankResource) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *BankResource) GetAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *BankResource) SetAccountId(v string) {
	o.AccountId = v
}

// GetStatus returns the Status field value
func (o *BankResource) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BankResource) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BankResource) SetStatus(v string) {
	o.Status = v
}

func (o BankResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["bank_code"] = o.BankCode
	}
	if true {
		toSerialize["bank_code_type"] = o.BankCodeType
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.StateProvince != nil {
		toSerialize["state_province"] = o.StateProvince
	}
	if o.PostalCode != nil {
		toSerialize["postal_code"] = o.PostalCode
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.StreetAddress != nil {
		toSerialize["street_address"] = o.StreetAddress
	}
	if true {
		toSerialize["account_number"] = o.AccountNumber
	}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableBankResource struct {
	value *BankResource
	isSet bool
}

func (v NullableBankResource) Get() *BankResource {
	return v.value
}

func (v *NullableBankResource) Set(val *BankResource) {
	v.value = val
	v.isSet = true
}

func (v NullableBankResource) IsSet() bool {
	return v.isSet
}

func (v *NullableBankResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankResource(val *BankResource) *NullableBankResource {
	return &NullableBankResource{value: val, isSet: true}
}

func (v NullableBankResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


