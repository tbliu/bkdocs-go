/*
Alpaca Broker API

Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Position struct for Position
type Position struct {
	AssetId *string `json:"asset_id,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	Exchange *string `json:"exchange,omitempty"`
	AssetClass *string `json:"asset_class,omitempty"`
	AvgEntryPrice *string `json:"avg_entry_price,omitempty"`
	Qty *string `json:"qty,omitempty"`
	Side *string `json:"side,omitempty"`
	MarketValue *string `json:"market_value,omitempty"`
	CostBasis *string `json:"cost_basis,omitempty"`
	UnrealizedPl *string `json:"unrealized_pl,omitempty"`
	UnrealizedPlpc *string `json:"unrealized_plpc,omitempty"`
	UnrealizedIntradayPl *string `json:"unrealized_intraday_pl,omitempty"`
	UnrealizedIntradayPlpc *string `json:"unrealized_intraday_plpc,omitempty"`
	CurrentPrice *string `json:"current_price,omitempty"`
	LastdayPrice *string `json:"lastday_price,omitempty"`
	ChangeToday *string `json:"change_today,omitempty"`
}

// NewPosition instantiates a new Position object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPosition() *Position {
	this := Position{}
	return &this
}

// NewPositionWithDefaults instantiates a new Position object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPositionWithDefaults() *Position {
	this := Position{}
	return &this
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *Position) GetAssetId() string {
	if o == nil || o.AssetId == nil {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetAssetIdOk() (*string, bool) {
	if o == nil || o.AssetId == nil {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *Position) HasAssetId() bool {
	if o != nil && o.AssetId != nil {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *Position) SetAssetId(v string) {
	o.AssetId = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *Position) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *Position) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *Position) SetSymbol(v string) {
	o.Symbol = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *Position) GetExchange() string {
	if o == nil || o.Exchange == nil {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetExchangeOk() (*string, bool) {
	if o == nil || o.Exchange == nil {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *Position) HasExchange() bool {
	if o != nil && o.Exchange != nil {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *Position) SetExchange(v string) {
	o.Exchange = &v
}

// GetAssetClass returns the AssetClass field value if set, zero value otherwise.
func (o *Position) GetAssetClass() string {
	if o == nil || o.AssetClass == nil {
		var ret string
		return ret
	}
	return *o.AssetClass
}

// GetAssetClassOk returns a tuple with the AssetClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetAssetClassOk() (*string, bool) {
	if o == nil || o.AssetClass == nil {
		return nil, false
	}
	return o.AssetClass, true
}

// HasAssetClass returns a boolean if a field has been set.
func (o *Position) HasAssetClass() bool {
	if o != nil && o.AssetClass != nil {
		return true
	}

	return false
}

// SetAssetClass gets a reference to the given string and assigns it to the AssetClass field.
func (o *Position) SetAssetClass(v string) {
	o.AssetClass = &v
}

// GetAvgEntryPrice returns the AvgEntryPrice field value if set, zero value otherwise.
func (o *Position) GetAvgEntryPrice() string {
	if o == nil || o.AvgEntryPrice == nil {
		var ret string
		return ret
	}
	return *o.AvgEntryPrice
}

// GetAvgEntryPriceOk returns a tuple with the AvgEntryPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetAvgEntryPriceOk() (*string, bool) {
	if o == nil || o.AvgEntryPrice == nil {
		return nil, false
	}
	return o.AvgEntryPrice, true
}

// HasAvgEntryPrice returns a boolean if a field has been set.
func (o *Position) HasAvgEntryPrice() bool {
	if o != nil && o.AvgEntryPrice != nil {
		return true
	}

	return false
}

// SetAvgEntryPrice gets a reference to the given string and assigns it to the AvgEntryPrice field.
func (o *Position) SetAvgEntryPrice(v string) {
	o.AvgEntryPrice = &v
}

// GetQty returns the Qty field value if set, zero value otherwise.
func (o *Position) GetQty() string {
	if o == nil || o.Qty == nil {
		var ret string
		return ret
	}
	return *o.Qty
}

// GetQtyOk returns a tuple with the Qty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetQtyOk() (*string, bool) {
	if o == nil || o.Qty == nil {
		return nil, false
	}
	return o.Qty, true
}

// HasQty returns a boolean if a field has been set.
func (o *Position) HasQty() bool {
	if o != nil && o.Qty != nil {
		return true
	}

	return false
}

// SetQty gets a reference to the given string and assigns it to the Qty field.
func (o *Position) SetQty(v string) {
	o.Qty = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *Position) GetSide() string {
	if o == nil || o.Side == nil {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetSideOk() (*string, bool) {
	if o == nil || o.Side == nil {
		return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *Position) HasSide() bool {
	if o != nil && o.Side != nil {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *Position) SetSide(v string) {
	o.Side = &v
}

// GetMarketValue returns the MarketValue field value if set, zero value otherwise.
func (o *Position) GetMarketValue() string {
	if o == nil || o.MarketValue == nil {
		var ret string
		return ret
	}
	return *o.MarketValue
}

// GetMarketValueOk returns a tuple with the MarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetMarketValueOk() (*string, bool) {
	if o == nil || o.MarketValue == nil {
		return nil, false
	}
	return o.MarketValue, true
}

// HasMarketValue returns a boolean if a field has been set.
func (o *Position) HasMarketValue() bool {
	if o != nil && o.MarketValue != nil {
		return true
	}

	return false
}

// SetMarketValue gets a reference to the given string and assigns it to the MarketValue field.
func (o *Position) SetMarketValue(v string) {
	o.MarketValue = &v
}

// GetCostBasis returns the CostBasis field value if set, zero value otherwise.
func (o *Position) GetCostBasis() string {
	if o == nil || o.CostBasis == nil {
		var ret string
		return ret
	}
	return *o.CostBasis
}

// GetCostBasisOk returns a tuple with the CostBasis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetCostBasisOk() (*string, bool) {
	if o == nil || o.CostBasis == nil {
		return nil, false
	}
	return o.CostBasis, true
}

// HasCostBasis returns a boolean if a field has been set.
func (o *Position) HasCostBasis() bool {
	if o != nil && o.CostBasis != nil {
		return true
	}

	return false
}

// SetCostBasis gets a reference to the given string and assigns it to the CostBasis field.
func (o *Position) SetCostBasis(v string) {
	o.CostBasis = &v
}

// GetUnrealizedPl returns the UnrealizedPl field value if set, zero value otherwise.
func (o *Position) GetUnrealizedPl() string {
	if o == nil || o.UnrealizedPl == nil {
		var ret string
		return ret
	}
	return *o.UnrealizedPl
}

// GetUnrealizedPlOk returns a tuple with the UnrealizedPl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetUnrealizedPlOk() (*string, bool) {
	if o == nil || o.UnrealizedPl == nil {
		return nil, false
	}
	return o.UnrealizedPl, true
}

// HasUnrealizedPl returns a boolean if a field has been set.
func (o *Position) HasUnrealizedPl() bool {
	if o != nil && o.UnrealizedPl != nil {
		return true
	}

	return false
}

// SetUnrealizedPl gets a reference to the given string and assigns it to the UnrealizedPl field.
func (o *Position) SetUnrealizedPl(v string) {
	o.UnrealizedPl = &v
}

// GetUnrealizedPlpc returns the UnrealizedPlpc field value if set, zero value otherwise.
func (o *Position) GetUnrealizedPlpc() string {
	if o == nil || o.UnrealizedPlpc == nil {
		var ret string
		return ret
	}
	return *o.UnrealizedPlpc
}

// GetUnrealizedPlpcOk returns a tuple with the UnrealizedPlpc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetUnrealizedPlpcOk() (*string, bool) {
	if o == nil || o.UnrealizedPlpc == nil {
		return nil, false
	}
	return o.UnrealizedPlpc, true
}

// HasUnrealizedPlpc returns a boolean if a field has been set.
func (o *Position) HasUnrealizedPlpc() bool {
	if o != nil && o.UnrealizedPlpc != nil {
		return true
	}

	return false
}

// SetUnrealizedPlpc gets a reference to the given string and assigns it to the UnrealizedPlpc field.
func (o *Position) SetUnrealizedPlpc(v string) {
	o.UnrealizedPlpc = &v
}

// GetUnrealizedIntradayPl returns the UnrealizedIntradayPl field value if set, zero value otherwise.
func (o *Position) GetUnrealizedIntradayPl() string {
	if o == nil || o.UnrealizedIntradayPl == nil {
		var ret string
		return ret
	}
	return *o.UnrealizedIntradayPl
}

// GetUnrealizedIntradayPlOk returns a tuple with the UnrealizedIntradayPl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetUnrealizedIntradayPlOk() (*string, bool) {
	if o == nil || o.UnrealizedIntradayPl == nil {
		return nil, false
	}
	return o.UnrealizedIntradayPl, true
}

// HasUnrealizedIntradayPl returns a boolean if a field has been set.
func (o *Position) HasUnrealizedIntradayPl() bool {
	if o != nil && o.UnrealizedIntradayPl != nil {
		return true
	}

	return false
}

// SetUnrealizedIntradayPl gets a reference to the given string and assigns it to the UnrealizedIntradayPl field.
func (o *Position) SetUnrealizedIntradayPl(v string) {
	o.UnrealizedIntradayPl = &v
}

// GetUnrealizedIntradayPlpc returns the UnrealizedIntradayPlpc field value if set, zero value otherwise.
func (o *Position) GetUnrealizedIntradayPlpc() string {
	if o == nil || o.UnrealizedIntradayPlpc == nil {
		var ret string
		return ret
	}
	return *o.UnrealizedIntradayPlpc
}

// GetUnrealizedIntradayPlpcOk returns a tuple with the UnrealizedIntradayPlpc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetUnrealizedIntradayPlpcOk() (*string, bool) {
	if o == nil || o.UnrealizedIntradayPlpc == nil {
		return nil, false
	}
	return o.UnrealizedIntradayPlpc, true
}

// HasUnrealizedIntradayPlpc returns a boolean if a field has been set.
func (o *Position) HasUnrealizedIntradayPlpc() bool {
	if o != nil && o.UnrealizedIntradayPlpc != nil {
		return true
	}

	return false
}

// SetUnrealizedIntradayPlpc gets a reference to the given string and assigns it to the UnrealizedIntradayPlpc field.
func (o *Position) SetUnrealizedIntradayPlpc(v string) {
	o.UnrealizedIntradayPlpc = &v
}

// GetCurrentPrice returns the CurrentPrice field value if set, zero value otherwise.
func (o *Position) GetCurrentPrice() string {
	if o == nil || o.CurrentPrice == nil {
		var ret string
		return ret
	}
	return *o.CurrentPrice
}

// GetCurrentPriceOk returns a tuple with the CurrentPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetCurrentPriceOk() (*string, bool) {
	if o == nil || o.CurrentPrice == nil {
		return nil, false
	}
	return o.CurrentPrice, true
}

// HasCurrentPrice returns a boolean if a field has been set.
func (o *Position) HasCurrentPrice() bool {
	if o != nil && o.CurrentPrice != nil {
		return true
	}

	return false
}

// SetCurrentPrice gets a reference to the given string and assigns it to the CurrentPrice field.
func (o *Position) SetCurrentPrice(v string) {
	o.CurrentPrice = &v
}

// GetLastdayPrice returns the LastdayPrice field value if set, zero value otherwise.
func (o *Position) GetLastdayPrice() string {
	if o == nil || o.LastdayPrice == nil {
		var ret string
		return ret
	}
	return *o.LastdayPrice
}

// GetLastdayPriceOk returns a tuple with the LastdayPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetLastdayPriceOk() (*string, bool) {
	if o == nil || o.LastdayPrice == nil {
		return nil, false
	}
	return o.LastdayPrice, true
}

// HasLastdayPrice returns a boolean if a field has been set.
func (o *Position) HasLastdayPrice() bool {
	if o != nil && o.LastdayPrice != nil {
		return true
	}

	return false
}

// SetLastdayPrice gets a reference to the given string and assigns it to the LastdayPrice field.
func (o *Position) SetLastdayPrice(v string) {
	o.LastdayPrice = &v
}

// GetChangeToday returns the ChangeToday field value if set, zero value otherwise.
func (o *Position) GetChangeToday() string {
	if o == nil || o.ChangeToday == nil {
		var ret string
		return ret
	}
	return *o.ChangeToday
}

// GetChangeTodayOk returns a tuple with the ChangeToday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Position) GetChangeTodayOk() (*string, bool) {
	if o == nil || o.ChangeToday == nil {
		return nil, false
	}
	return o.ChangeToday, true
}

// HasChangeToday returns a boolean if a field has been set.
func (o *Position) HasChangeToday() bool {
	if o != nil && o.ChangeToday != nil {
		return true
	}

	return false
}

// SetChangeToday gets a reference to the given string and assigns it to the ChangeToday field.
func (o *Position) SetChangeToday(v string) {
	o.ChangeToday = &v
}

func (o Position) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssetId != nil {
		toSerialize["asset_id"] = o.AssetId
	}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.Exchange != nil {
		toSerialize["exchange"] = o.Exchange
	}
	if o.AssetClass != nil {
		toSerialize["asset_class"] = o.AssetClass
	}
	if o.AvgEntryPrice != nil {
		toSerialize["avg_entry_price"] = o.AvgEntryPrice
	}
	if o.Qty != nil {
		toSerialize["qty"] = o.Qty
	}
	if o.Side != nil {
		toSerialize["side"] = o.Side
	}
	if o.MarketValue != nil {
		toSerialize["market_value"] = o.MarketValue
	}
	if o.CostBasis != nil {
		toSerialize["cost_basis"] = o.CostBasis
	}
	if o.UnrealizedPl != nil {
		toSerialize["unrealized_pl"] = o.UnrealizedPl
	}
	if o.UnrealizedPlpc != nil {
		toSerialize["unrealized_plpc"] = o.UnrealizedPlpc
	}
	if o.UnrealizedIntradayPl != nil {
		toSerialize["unrealized_intraday_pl"] = o.UnrealizedIntradayPl
	}
	if o.UnrealizedIntradayPlpc != nil {
		toSerialize["unrealized_intraday_plpc"] = o.UnrealizedIntradayPlpc
	}
	if o.CurrentPrice != nil {
		toSerialize["current_price"] = o.CurrentPrice
	}
	if o.LastdayPrice != nil {
		toSerialize["lastday_price"] = o.LastdayPrice
	}
	if o.ChangeToday != nil {
		toSerialize["change_today"] = o.ChangeToday
	}
	return json.Marshal(toSerialize)
}

type NullablePosition struct {
	value *Position
	isSet bool
}

func (v NullablePosition) Get() *Position {
	return v.value
}

func (v *NullablePosition) Set(val *Position) {
	v.value = val
	v.isSet = true
}

func (v NullablePosition) IsSet() bool {
	return v.isSet
}

func (v *NullablePosition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePosition(val *Position) *NullablePosition {
	return &NullablePosition{value: val, isSet: true}
}

func (v NullablePosition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePosition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


