/*
Alpaca Broker API

Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ACHRelationshipData struct for ACHRelationshipData
type ACHRelationshipData struct {
	AccountOwnerName string `json:"account_owner_name"`
	BankAccountType string `json:"bank_account_type"`
	BankAccountNumber string `json:"bank_account_number"`
	BankRoutingNumber string `json:"bank_routing_number"`
	Nickname *string `json:"nickname,omitempty"`
}

// NewACHRelationshipData instantiates a new ACHRelationshipData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewACHRelationshipData(accountOwnerName string, bankAccountType string, bankAccountNumber string, bankRoutingNumber string) *ACHRelationshipData {
	this := ACHRelationshipData{}
	this.AccountOwnerName = accountOwnerName
	this.BankAccountType = bankAccountType
	this.BankAccountNumber = bankAccountNumber
	this.BankRoutingNumber = bankRoutingNumber
	return &this
}

// NewACHRelationshipDataWithDefaults instantiates a new ACHRelationshipData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewACHRelationshipDataWithDefaults() *ACHRelationshipData {
	this := ACHRelationshipData{}
	return &this
}

// GetAccountOwnerName returns the AccountOwnerName field value
func (o *ACHRelationshipData) GetAccountOwnerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountOwnerName
}

// GetAccountOwnerNameOk returns a tuple with the AccountOwnerName field value
// and a boolean to check if the value has been set.
func (o *ACHRelationshipData) GetAccountOwnerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountOwnerName, true
}

// SetAccountOwnerName sets field value
func (o *ACHRelationshipData) SetAccountOwnerName(v string) {
	o.AccountOwnerName = v
}

// GetBankAccountType returns the BankAccountType field value
func (o *ACHRelationshipData) GetBankAccountType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankAccountType
}

// GetBankAccountTypeOk returns a tuple with the BankAccountType field value
// and a boolean to check if the value has been set.
func (o *ACHRelationshipData) GetBankAccountTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BankAccountType, true
}

// SetBankAccountType sets field value
func (o *ACHRelationshipData) SetBankAccountType(v string) {
	o.BankAccountType = v
}

// GetBankAccountNumber returns the BankAccountNumber field value
func (o *ACHRelationshipData) GetBankAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankAccountNumber
}

// GetBankAccountNumberOk returns a tuple with the BankAccountNumber field value
// and a boolean to check if the value has been set.
func (o *ACHRelationshipData) GetBankAccountNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BankAccountNumber, true
}

// SetBankAccountNumber sets field value
func (o *ACHRelationshipData) SetBankAccountNumber(v string) {
	o.BankAccountNumber = v
}

// GetBankRoutingNumber returns the BankRoutingNumber field value
func (o *ACHRelationshipData) GetBankRoutingNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankRoutingNumber
}

// GetBankRoutingNumberOk returns a tuple with the BankRoutingNumber field value
// and a boolean to check if the value has been set.
func (o *ACHRelationshipData) GetBankRoutingNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BankRoutingNumber, true
}

// SetBankRoutingNumber sets field value
func (o *ACHRelationshipData) SetBankRoutingNumber(v string) {
	o.BankRoutingNumber = v
}

// GetNickname returns the Nickname field value if set, zero value otherwise.
func (o *ACHRelationshipData) GetNickname() string {
	if o == nil || o.Nickname == nil {
		var ret string
		return ret
	}
	return *o.Nickname
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACHRelationshipData) GetNicknameOk() (*string, bool) {
	if o == nil || o.Nickname == nil {
		return nil, false
	}
	return o.Nickname, true
}

// HasNickname returns a boolean if a field has been set.
func (o *ACHRelationshipData) HasNickname() bool {
	if o != nil && o.Nickname != nil {
		return true
	}

	return false
}

// SetNickname gets a reference to the given string and assigns it to the Nickname field.
func (o *ACHRelationshipData) SetNickname(v string) {
	o.Nickname = &v
}

func (o ACHRelationshipData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_owner_name"] = o.AccountOwnerName
	}
	if true {
		toSerialize["bank_account_type"] = o.BankAccountType
	}
	if true {
		toSerialize["bank_account_number"] = o.BankAccountNumber
	}
	if true {
		toSerialize["bank_routing_number"] = o.BankRoutingNumber
	}
	if o.Nickname != nil {
		toSerialize["nickname"] = o.Nickname
	}
	return json.Marshal(toSerialize)
}

type NullableACHRelationshipData struct {
	value *ACHRelationshipData
	isSet bool
}

func (v NullableACHRelationshipData) Get() *ACHRelationshipData {
	return v.value
}

func (v *NullableACHRelationshipData) Set(val *ACHRelationshipData) {
	v.value = val
	v.isSet = true
}

func (v NullableACHRelationshipData) IsSet() bool {
	return v.isSet
}

func (v *NullableACHRelationshipData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableACHRelationshipData(val *ACHRelationshipData) *NullableACHRelationshipData {
	return &NullableACHRelationshipData{value: val, isSet: true}
}

func (v NullableACHRelationshipData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableACHRelationshipData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


