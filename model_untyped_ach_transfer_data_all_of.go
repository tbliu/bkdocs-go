/*
Alpaca Broker API

Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UntypedACHTransferDataAllOf struct for UntypedACHTransferDataAllOf
type UntypedACHTransferDataAllOf struct {
	RelationshipId string `json:"relationship_id"`
}

// NewUntypedACHTransferDataAllOf instantiates a new UntypedACHTransferDataAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUntypedACHTransferDataAllOf(relationshipId string) *UntypedACHTransferDataAllOf {
	this := UntypedACHTransferDataAllOf{}
	this.RelationshipId = relationshipId
	return &this
}

// NewUntypedACHTransferDataAllOfWithDefaults instantiates a new UntypedACHTransferDataAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUntypedACHTransferDataAllOfWithDefaults() *UntypedACHTransferDataAllOf {
	this := UntypedACHTransferDataAllOf{}
	return &this
}

// GetRelationshipId returns the RelationshipId field value
func (o *UntypedACHTransferDataAllOf) GetRelationshipId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RelationshipId
}

// GetRelationshipIdOk returns a tuple with the RelationshipId field value
// and a boolean to check if the value has been set.
func (o *UntypedACHTransferDataAllOf) GetRelationshipIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RelationshipId, true
}

// SetRelationshipId sets field value
func (o *UntypedACHTransferDataAllOf) SetRelationshipId(v string) {
	o.RelationshipId = v
}

func (o UntypedACHTransferDataAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["relationship_id"] = o.RelationshipId
	}
	return json.Marshal(toSerialize)
}

type NullableUntypedACHTransferDataAllOf struct {
	value *UntypedACHTransferDataAllOf
	isSet bool
}

func (v NullableUntypedACHTransferDataAllOf) Get() *UntypedACHTransferDataAllOf {
	return v.value
}

func (v *NullableUntypedACHTransferDataAllOf) Set(val *UntypedACHTransferDataAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUntypedACHTransferDataAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUntypedACHTransferDataAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUntypedACHTransferDataAllOf(val *UntypedACHTransferDataAllOf) *NullableUntypedACHTransferDataAllOf {
	return &NullableUntypedACHTransferDataAllOf{value: val, isSet: true}
}

func (v NullableUntypedACHTransferDataAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUntypedACHTransferDataAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


