/*
Alpaca Broker API

Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Agreement struct for Agreement
type Agreement struct {
	// - margin_agreement: Alpaca Margin Agreement - account_agreement: Alpaca Account Agreement - customer_agreement: Alpaca Customer Agreement 
	Agreement string `json:"agreement"`
	SignedAt string `json:"signed_at"`
	IpAddress string `json:"ip_address"`
}

// NewAgreement instantiates a new Agreement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgreement(agreement string, signedAt string, ipAddress string) *Agreement {
	this := Agreement{}
	this.Agreement = agreement
	this.SignedAt = signedAt
	this.IpAddress = ipAddress
	return &this
}

// NewAgreementWithDefaults instantiates a new Agreement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgreementWithDefaults() *Agreement {
	this := Agreement{}
	return &this
}

// GetAgreement returns the Agreement field value
func (o *Agreement) GetAgreement() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Agreement
}

// GetAgreementOk returns a tuple with the Agreement field value
// and a boolean to check if the value has been set.
func (o *Agreement) GetAgreementOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Agreement, true
}

// SetAgreement sets field value
func (o *Agreement) SetAgreement(v string) {
	o.Agreement = v
}

// GetSignedAt returns the SignedAt field value
func (o *Agreement) GetSignedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignedAt
}

// GetSignedAtOk returns a tuple with the SignedAt field value
// and a boolean to check if the value has been set.
func (o *Agreement) GetSignedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SignedAt, true
}

// SetSignedAt sets field value
func (o *Agreement) SetSignedAt(v string) {
	o.SignedAt = v
}

// GetIpAddress returns the IpAddress field value
func (o *Agreement) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *Agreement) GetIpAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *Agreement) SetIpAddress(v string) {
	o.IpAddress = v
}

func (o Agreement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["agreement"] = o.Agreement
	}
	if true {
		toSerialize["signed_at"] = o.SignedAt
	}
	if true {
		toSerialize["ip_address"] = o.IpAddress
	}
	return json.Marshal(toSerialize)
}

type NullableAgreement struct {
	value *Agreement
	isSet bool
}

func (v NullableAgreement) Get() *Agreement {
	return v.value
}

func (v *NullableAgreement) Set(val *Agreement) {
	v.value = val
	v.isSet = true
}

func (v NullableAgreement) IsSet() bool {
	return v.isSet
}

func (v *NullableAgreement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgreement(val *Agreement) *NullableAgreement {
	return &NullableAgreement{value: val, isSet: true}
}

func (v NullableAgreement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgreement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


