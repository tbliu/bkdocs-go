/*
Alpaca Broker API

Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchJournalRequest struct for BatchJournalRequest
type BatchJournalRequest struct {
	EntryType string `json:"entry_type"`
	FromAccount string `json:"from_account"`
	Description *string `json:"description,omitempty"`
	Entries *[]BatchJournalRequestEntries `json:"entries,omitempty"`
}

// NewBatchJournalRequest instantiates a new BatchJournalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchJournalRequest(entryType string, fromAccount string) *BatchJournalRequest {
	this := BatchJournalRequest{}
	this.EntryType = entryType
	this.FromAccount = fromAccount
	return &this
}

// NewBatchJournalRequestWithDefaults instantiates a new BatchJournalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchJournalRequestWithDefaults() *BatchJournalRequest {
	this := BatchJournalRequest{}
	return &this
}

// GetEntryType returns the EntryType field value
func (o *BatchJournalRequest) GetEntryType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryType
}

// GetEntryTypeOk returns a tuple with the EntryType field value
// and a boolean to check if the value has been set.
func (o *BatchJournalRequest) GetEntryTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EntryType, true
}

// SetEntryType sets field value
func (o *BatchJournalRequest) SetEntryType(v string) {
	o.EntryType = v
}

// GetFromAccount returns the FromAccount field value
func (o *BatchJournalRequest) GetFromAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromAccount
}

// GetFromAccountOk returns a tuple with the FromAccount field value
// and a boolean to check if the value has been set.
func (o *BatchJournalRequest) GetFromAccountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FromAccount, true
}

// SetFromAccount sets field value
func (o *BatchJournalRequest) SetFromAccount(v string) {
	o.FromAccount = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BatchJournalRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchJournalRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BatchJournalRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BatchJournalRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *BatchJournalRequest) GetEntries() []BatchJournalRequestEntries {
	if o == nil || o.Entries == nil {
		var ret []BatchJournalRequestEntries
		return ret
	}
	return *o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchJournalRequest) GetEntriesOk() (*[]BatchJournalRequestEntries, bool) {
	if o == nil || o.Entries == nil {
		return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *BatchJournalRequest) HasEntries() bool {
	if o != nil && o.Entries != nil {
		return true
	}

	return false
}

// SetEntries gets a reference to the given []BatchJournalRequestEntries and assigns it to the Entries field.
func (o *BatchJournalRequest) SetEntries(v []BatchJournalRequestEntries) {
	o.Entries = &v
}

func (o BatchJournalRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entry_type"] = o.EntryType
	}
	if true {
		toSerialize["from_account"] = o.FromAccount
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Entries != nil {
		toSerialize["entries"] = o.Entries
	}
	return json.Marshal(toSerialize)
}

type NullableBatchJournalRequest struct {
	value *BatchJournalRequest
	isSet bool
}

func (v NullableBatchJournalRequest) Get() *BatchJournalRequest {
	return v.value
}

func (v *NullableBatchJournalRequest) Set(val *BatchJournalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchJournalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchJournalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchJournalRequest(val *BatchJournalRequest) *NullableBatchJournalRequest {
	return &NullableBatchJournalRequest{value: val, isSet: true}
}

func (v NullableBatchJournalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchJournalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


