/*
Alpaca Broker API

Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UntypedTransferData struct for UntypedTransferData
type UntypedTransferData struct {
	Amount float64 `json:"amount"`
	Direction string `json:"direction"`
}

// NewUntypedTransferData instantiates a new UntypedTransferData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUntypedTransferData(amount float64, direction string) *UntypedTransferData {
	this := UntypedTransferData{}
	this.Amount = amount
	this.Direction = direction
	return &this
}

// NewUntypedTransferDataWithDefaults instantiates a new UntypedTransferData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUntypedTransferDataWithDefaults() *UntypedTransferData {
	this := UntypedTransferData{}
	return &this
}

// GetAmount returns the Amount field value
func (o *UntypedTransferData) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *UntypedTransferData) GetAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *UntypedTransferData) SetAmount(v float64) {
	o.Amount = v
}

// GetDirection returns the Direction field value
func (o *UntypedTransferData) GetDirection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *UntypedTransferData) GetDirectionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *UntypedTransferData) SetDirection(v string) {
	o.Direction = v
}

func (o UntypedTransferData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["direction"] = o.Direction
	}
	return json.Marshal(toSerialize)
}

type NullableUntypedTransferData struct {
	value *UntypedTransferData
	isSet bool
}

func (v NullableUntypedTransferData) Get() *UntypedTransferData {
	return v.value
}

func (v *NullableUntypedTransferData) Set(val *UntypedTransferData) {
	v.value = val
	v.isSet = true
}

func (v NullableUntypedTransferData) IsSet() bool {
	return v.isSet
}

func (v *NullableUntypedTransferData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUntypedTransferData(val *UntypedTransferData) *NullableUntypedTransferData {
	return &NullableUntypedTransferData{value: val, isSet: true}
}

func (v NullableUntypedTransferData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUntypedTransferData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


